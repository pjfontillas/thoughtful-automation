---
service: serverless-thoughtful-automation
frameworkVersion: "3"
useDotenv: true
variablesResolutionMode: 20210326
disabledDeprecations:
  - CLI_OPTIONS_SCHEMA # some Serverless plugins haven't been updated yet and generate warnings

provider:
  name: aws
  runtime: nodejs12.x
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'dev'}
  memorySize: 512
  timeout: 6
  logRetentionInDays: 7
  lambdaHashingVersion: 20201221 # for upcoming Serverless v3

  apiGateway:
    shouldStartNameWithService: true # for upcoming Serverless v3

  environment:
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_REGION: ${self:provider.region}
    SERVERLESS_STAGE: ${self:provider.stage}

    APP_DIST_URL: ${self:custom.distBucketUrl.${self:provider.region}, self:custom.distBucketUrl.default}
    APP_PUBLIC_URL: ${self:custom.distBucketUrl.${self:provider.region}, self:custom.distBucketUrl.default}
    APIGATEWAY_URL:
      Fn::Join:
        - ""
        - - https://
          - Ref: ApiGatewayRestApi
          - .execute-api.
          - Ref: AWS::Region
          - .amazonaws.com/
          - ${self:provider.stage}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "ses:SendEmail"
            - "ses:SendRawEmail"
          Resource: "*"
        - Effect: Allow
          Action:
            - apigateway:POST
          Resource: !Sub arn:aws:apigateway:${AWS::Region}::/domainnames
        - Effect: Allow
          Action:
            - apigateway:GET
            - apigateway:DELETE
          Resource: !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/*
        - Effect: Allow
          Action:
            - apigateway:PATCH
            - apigateway:POST
          Resource:
            - !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/*/basepathmappings
            - !Sub arn:aws:apigateway:${AWS::Region}::/domainnames/*/basepathmappings/*
        - Effect: Allow
          Action:
            - cloudfront:UpdateDistribution
          Resource: '*'
        - Effect: Allow
          Action:
            - route53:ListHostedZones
          Resource: '*'
        - Effect: Allow
          Action:
            - acm:ListCertificates
          Resource: '*'
        # - Effect: Allow
        #   Action:
        #     - route53:ChangeResourceRecordSets
        #     - route53:GetHostedZone
        #     - route53:ListResourceRecordSets
        #   Resource: !Sub arn:aws:route53:::hostedzone/${HostedZoneId}
        - Effect: Allow
          Action:
            - iam:CreateServiceLinkedRole
          Resource:
            - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway
        - Effect: Allow
          Action:
            - "secretsmanager:*"
          Resource: "*"
        - Effect: Allow
          Action:
           - "rds:*"
           - "cloudwatch:DescribeAlarms"
           - "cloudwatch:GetMetricStatistics"
           - "ec2:CreateNetworkInterface"
           - "ec2:DescribeNetworkInterfaces"
           - "ec2:DeleteNetworkInterface"
           - "ec2:DescribeAccountAttributes"
           - "ec2:DescribeAvailabilityZones"
           - "ec2:DescribeSecurityGroups"
           - "ec2:DescribeSubnets"
           - "ec2:DescribeVpcs"
           - "sns:ListSubscriptions"
           - "sns:ListTopics"
           - "logs:DescribeLogStreams"
           - "logs:GetLogEvents"
          Resource: "*"

plugins:
  - serverless-webpack
  - serverless-plugin-scripts
  - serverless-offline
  - serverless-s3-deploy
  - serverless-domain-manager

functions:
  serve:
    # Any web request regardless of path or method will be handled by a single Lambda function
    handler: handler.serve
    events:
      - http:
          path: /
          method: any
          cors: true
      - http:
          path: /email/{email}
          method: POST
          cors: true
      - http:
          path: /verify/{token}/email/{email}
          method: GET
          cors: true
      - http:
          path: /{any+}
          method: any
          cors: true


custom:
  bundle:
    ignorePackages:
      - 'pg-native'
  customDomain:
    domainName: ta.lucis.works
    stage: ${self:provider.stage}
    certificateName: '*.lucis.works'
    createRoute53Record: true
    createRoute53IPv6Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2
    # apiType: rest
    # autoDomain: false
  distBucketUrl:
    us-east-1:
      # us-east-1 uses a different URL format than the other regions
      Fn::Join:
        - ""
        - - https://s3.amazonaws.com/
          - Ref: DistBucket
    default:
      # All other regions
      Fn::Join:
        - ""
        - - https://s3-
          - Ref: AWS::Region
          - .amazonaws.com/
          - Ref: DistBucket

  scripts:
    hooks:
      # Build the client-side script before packaging backend code
      package:initialize: "npm run build:browser"
      deploy:finalize: "npx sls s3deploy --stage ${self:provider.stage}"

  webpack:
    webpackConfig: "webpack.server.config.js"

  assets:
    # Automatically copy distribution folder to S3 stopped working; do it manually (see `scripts.hooks.deploy:finalize`)
    auto: false
    targets:
      - bucket:
          Ref: DistBucket
        acl: public-read
        files:
          - source: dist/
            headers:
              CacheControl: max-age=31104000 # 1 year
            globs:
              - "**/*"

  serverless-offline:
    useChildProcesses: true
    noPrependStageInUrl: true
    httpPort: 3000
    lambdaPort: 3002

resources:
  Resources:
    # Customize the API Gateway resource
    ApiGatewayRestApi:
      Type: AWS::ApiGateway::RestApi
      Properties:
        # Enable gzip compression
        MinimumCompressionSize: 1000

    # S3 Bucket for the distribution bundles
    DistBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Delete
      Properties:
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - "*"
              AllowedMethods:
                - "GET"
              AllowedOrigins:
                - Fn::Join:
                    - ""
                    - - https://
                      - Ref: ApiGatewayRestApi
                      - .execute-api.
                      - Ref: AWS::Region
                      - .amazonaws.com
                - "*"
              MaxAge: 3000

  Outputs:
    ApiGatewayRestApi:
      Description: API Gateway Endpoint
      Value:
        Ref: ApiGatewayRestApi
    DistBucket:
      Description: Distribution S3 Bucket
      Value:
        Ref: DistBucket
